class CheeseFondue : AAmazing
{
    public override void Use()
    {
        base.Use();
        IsCheeseMelted = true;
    }

    public override bool IsAmazing => true;

    public bool IsCheeseMelted { private set; get; }
}

abstract class AAmazing
{
    public virtual void Use()
    {
        if (!IsAmazing) throw new InvalidOperationException("Object isn't amazing enough");
    }

    public abstract bool IsAmazing { get; }
}